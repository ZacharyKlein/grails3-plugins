buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
        classpath 'com.agileorbit:schwartz:1.0.0'
        classpath 'org.cloudfoundry:cf-gradle-plugin:1.1.3'
        classpath 'com.fasterxml.jackson.core:jackson-core:2.7.3'
        classpath 'com.fasterxml.jackson.core:jackson-databind:2.7.3'
    }
}

version file('version.txt').text.trim()
group "grailspackage"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin: "com.bertramlabs.asset-pipeline"
apply from: 'gradle/cloudfoundry.gradle'

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url 'http://dl.bintray.com/sdelamo/plugins' }
    maven { url 'http://dl.bintray.com/grails/plugins' }
}

dependencies {
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-web-testing-support"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    compile 'com.agileorbit:schwartz:1.0.0'
    compile 'org.twitter4j:twitter4j-core:4.0.4'
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7'

    compile "org.grails.plugins:grails-navigation:$grailsNavigationVersion"
    compile "com.vladsch.flexmark:flexmark-all:$flexmarkVersion"
    compile "org.asciidoctor:asciidoctorj:$asciidoctorjVersion"

    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.squareup.moshi:moshi:1.5.0'
}

apply from: "${rootProject.projectDir}/gradle/xrebel.gradle"

bootRun {
    systemProperties System.properties
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

assets {
    minifyJs = true
    minifyCss = true
}

task stage() {
    dependsOn assemble
}

test {
    systemProperties System.properties
}